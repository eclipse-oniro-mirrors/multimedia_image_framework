# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos/ace/ace.gni")
import("//foundation/multimedia/image_framework/ide/image_decode_config.gni")

config("image_external_config") {
  include_dirs = [
    "include",
    "${image_subsystem}/frameworks/kits/js/common/ndk/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/receiver/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/creator/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/pixelconverter/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/converter/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/codec/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/common/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/stream/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/utils/include",
    "${image_subsystem}/frameworks/innerkitsimpl/accessor/include",
    "//foundation/multimedia/image_framework/frameworks/kits/js/common/include",
    "//foundation/multimedia/image_framework/interfaces/kits/js/common/include",
    "//foundation/multimedia/image_framework/plugins/common/libs/image/libjpegplugin",
    "//foundation/multimedia/image_framework/plugins/manager/include",
    "//foundation/multimedia/image_framework/plugins/manager/include/image",
    "//foundation/multimedia/image_framework/interfaces/innerkits/include",
    "//foundation/multimedia/image_framework/interfaces/kits/native/include",
    "${image_subsystem}/interfaces/kits/js/common/include/sendable",
  ]

  include_dirs += [
    "//foundation/multimedia/image_framework/plugins/manager/include/pluginbase",
    "//foundation/multimedia/image_framework/plugins/common/libs/image/libjpegplugin/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/utils/include",
    "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/converter/include",
  ]

  if (use_mingw_win) {
    include_dirs +=
        [ "//foundation/multimedia/image_framework/mock/native/include" ]
  } else if (use_clang_mac) {
    include_dirs += [
      "//foundation/multimedia/image_framework/mock/native/include",
      "//third_party/bounds_checking_function/include",
      "//commonlibrary/c_utils/base/include",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
    ]
  } else if (use_clang_ios) {
    include_dirs += [
      "$image_subsystem/mock/native/include/log",
      "//foundation/multimedia/image_framework/mock/native/include/secure",
    ]
    include_dirs -= [
      "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/receiver/include",
      "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/creator/include",
    ]
  } else if (use_clang_android) {
    include_dirs += [
      "//commonlibrary/c_utils/base/include",
      "$image_subsystem/mock/native/include/log",
    ]

    include_dirs -= [
      "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/receiver/include",
      "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/creator/include",
    ]
  }
}

js_declaration("image_js") {
  part_name = "image_framework"
  sources = [ "//foundation/multimedia/image_framework/interfaces/kits/js/@ohos.multimedia.image.d.ts" ]
}

ohos_copy("image_declaration") {
  sources = [ "//foundation/multimedia/image_framework/interfaces/kits/js/@ohos.multimedia.image.d.ts" ]
  outputs = [ target_out_dir + "/$target_name/" ]
  module_source_dir = target_out_dir + "/$target_name"
  module_install_name = ""
}

if (use_clang_ios) {
  ohos_source_set("image") {
    public_configs = [ ":image_external_config" ]
    sources = [
      "$image_subsystem/frameworks/kits/js/common/image_pixel_map_napi_kits.cpp",
      "${image_subsystem}/frameworks/kits/js/common/auxiliary_picture_napi.cpp",
      "${image_subsystem}/frameworks/kits/js/common/metadata_napi.cpp",
      "${image_subsystem}/frameworks/kits/js/common/picture_napi.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_napi_utils.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_packer_napi.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_source_napi.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/native_module_ohos_image.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/pixel_map_napi.cpp",
    ]

    cflags = [ "-DIMAGE_DEBUG_FLAG" ]

    defines = image_decode_ios_defines
    deps = [
      "//foundation/arkui/napi:ace_napi",
      "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/pixelconverter:pixelconvertadapter",
      "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/utils:image_utils",
      "//foundation/multimedia/image_framework/interfaces/innerkits:image_native",
      "//foundation/multimedia/image_framework/mock/native:log_mock_static",
      "//foundation/multimedia/image_framework/plugins/manager:pluginmanager",
    ]

    #relative_install_dir = "module/multimedia"
    subsystem_name = "multimedia"
    part_name = "image_framework"
  }
} else {
  ohos_shared_library("image_napi") {
    if (!use_clang_android && !use_clang_ios) {
      sanitize = {
        cfi = true
        cfi_cross_dso = true
        cfi_vcall_icall_only = true
        debug = false
      }
    }
    sources = [
      "$image_subsystem/frameworks/kits/js/common/native_module_ohos_image.cpp",
    ]

    cflags = [
      "-DIMAGE_DEBUG_FLAG",
      "-DIMAGE_COLORSPACE_FLAG",
    ]

    deps = [
      ":image",
      "$image_subsystem/frameworks/innerkitsimpl/pixelconverter:pixelconvertadapter",
    ]

    external_deps = [
      "c_utils:utils",
      "drivers_peripheral_display:hdi_gralloc_client",
      "graphic_2d:color_manager",
      "graphic_surface:surface",
      "hilog:libhilog",
      "ipc:ipc_single",
      "napi:ace_napi",
    ]

    output_name = "libimage"
    relative_install_dir = "module/multimedia"
    subsystem_name = "multimedia"
    part_name = "image_framework"
  }

  ohos_shared_library("sendableimage") {
    if (!use_clang_android && !use_clang_ios) {
      sanitize = {
        cfi = true
        cfi_cross_dso = true
        cfi_vcall_icall_only = true
        debug = false
      }
    }
    sources = [ "$image_subsystem/frameworks/kits/js/common/sendable/native_module_image_sendable.cpp" ]

    cflags = [
      "-DIMAGE_DEBUG_FLAG",
      "-DIMAGE_COLORSPACE_FLAG",
    ]

    deps = [
      ":image",
      "$image_subsystem/frameworks/innerkitsimpl/pixelconverter:pixelconvertadapter",
    ]

    external_deps = [
      "c_utils:utils",
      "drivers_peripheral_display:hdi_gralloc_client",
      "graphic_2d:color_manager",
      "graphic_surface:surface",
      "hilog:libhilog",
      "ipc:ipc_single",
      "napi:ace_napi",
    ]

    output_name = "libsendableimage"
    relative_install_dir = "module/multimedia"
    subsystem_name = "multimedia"
    part_name = "image_framework"
  }

  ohos_shared_library("image") {
    if (!use_clang_android && !use_clang_ios) {
      sanitize = {
        cfi = true
        cfi_cross_dso = true
        cfi_vcall_icall_only = true
        debug = false
      }
    }
    public_configs = [ ":image_external_config" ]
    sources = [
      "$image_subsystem/frameworks/innerkitsimpl/accessor/src/buffer_metadata_stream.cpp",
      "$image_subsystem/frameworks/innerkitsimpl/accessor/src/exif_metadata_formatter.cpp",
      "$image_subsystem/frameworks/kits/js/common/image_format_convert_mdk_kits.cpp",
      "$image_subsystem/frameworks/kits/js/common/image_mdk_kits.cpp",
      "$image_subsystem/frameworks/kits/js/common/image_packer_mdk_kits.cpp",
      "$image_subsystem/frameworks/kits/js/common/image_pixel_map_napi_kits.cpp",
      "$image_subsystem/frameworks/kits/js/common/image_receiver_mdk_kits.cpp",
      "$image_subsystem/frameworks/kits/js/common/image_source_mdk_kits.cpp",
      "${image_subsystem}/frameworks/kits/js/common/auxiliary_picture_napi.cpp",
      "${image_subsystem}/frameworks/kits/js/common/metadata_napi.cpp",
      "${image_subsystem}/frameworks/kits/js/common/picture_napi.cpp",
      "${image_subsystem}/frameworks/kits/js/common/sendable/sendable_image_napi.cpp",
      "${image_subsystem}/frameworks/kits/js/common/sendable/sendable_image_receiver_napi.cpp",
      "${image_subsystem}/frameworks/kits/js/common/sendable/sendable_image_source_napi.cpp",
      "${image_subsystem}/frameworks/kits/js/common/sendable/sendable_pixel_map_napi.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_creator_napi.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_napi.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_napi_utils.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_packer_napi.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_receiver_napi.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_source_napi.cpp",
      "//foundation/multimedia/image_framework/frameworks/kits/js/common/pixel_map_napi.cpp",
    ]

    cflags = [
      "-DIMAGE_DEBUG_FLAG",
      "-DIMAGE_COLORSPACE_FLAG",
    ]
    external_deps = []

    if (use_clang_android) {
      defines = image_decode_android_defines
      cflags -= [ "-DIMAGE_COLORSPACE_FLAG" ]
      sources -= [
        "$image_subsystem/frameworks/kits/js/common/image_mdk_kits.cpp",
        "$image_subsystem/frameworks/kits/js/common/image_receiver_mdk_kits.cpp",
        "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_creator_napi.cpp",
        "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_napi.cpp",
        "//foundation/multimedia/image_framework/frameworks/kits/js/common/image_receiver_napi.cpp",
      ]
      deps = [
        "//commonlibrary/c_utils/base:utils",
        "//foundation/arkui/napi:ace_napi",
        "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/pixelconverter:pixelconvertadapter",
        "//foundation/multimedia/image_framework/frameworks/innerkitsimpl/utils:image_utils",
        "//foundation/multimedia/image_framework/interfaces/innerkits:image_native",
        "//foundation/multimedia/image_framework/mock/native:log_mock_static",
        "//foundation/multimedia/image_framework/plugins/manager:pluginmanager",
      ]
    } else {
      defines = []
      deps = [
        "$image_subsystem/frameworks/innerkitsimpl/egl_image:egl_image",
        "$image_subsystem/frameworks/innerkitsimpl/pixelconverter:pixelconvertadapter",
        "$image_subsystem/frameworks/innerkitsimpl/utils:image_utils",
        "$image_subsystem/interfaces/innerkits:image_native",
      ]
      external_deps += [ "hilog:libhilog" ]
    }

    external_deps += [
      "ability_runtime:runtime",
      "c_utils:utils",
      "ets_runtime:libark_jsruntime",
      "eventhandler:libeventhandler",
      "graphic_2d:2d_graphics",
      "graphic_2d:EGL",
      "graphic_2d:GLESv3",
      "graphic_2d:color_manager",
      "graphic_2d:color_space_object_convertor",
      "graphic_2d:libcomposer",
      "graphic_2d:librender_service_base",
      "graphic_2d:librender_service_client",
      "graphic_surface:surface",
      "graphic_surface:sync_fence",
      "hitrace:hitrace_meter",
      "ipc:ipc_napi",
      "ipc:ipc_single",
      "napi:ace_napi",
      "resource_management:librawfile",
    ]

    public_external_deps = [ "graphic_2d:color_manager" ]

    if (defined(global_parts_info) &&
        defined(global_parts_info.hiviewdfx_hichecker)) {
      external_deps += [ "hichecker:libhichecker" ]
      defines += [ "HICHECKER_ENABLE" ]
    }

    output_name = "libimage_napi"
    subsystem_name = "multimedia"
    innerapi_tags = [ "platformsdk" ]
    part_name = "image_framework"
  }

  if (use_clang_android) {
    ohos_shared_library("multimedia_image") {
      public_configs = [ ":image_external_config" ]
      sources = [
        "$image_subsystem/frameworks/kits/js/common/auxiliary_picture_napi.cpp",
        "$image_subsystem/frameworks/kits/js/common/image_packer_napi.cpp",
        "$image_subsystem/frameworks/kits/js/common/image_source_napi.cpp",
        "$image_subsystem/frameworks/kits/js/common/metadata_napi.cpp",
        "$image_subsystem/frameworks/kits/js/common/native_module_ohos_image.cpp",
        "$image_subsystem/frameworks/kits/js/common/picture_napi.cpp",
        "$image_subsystem/frameworks/kits/js/common/pixel_map_napi.cpp",
        "$image_subsystem/kits/js/common/image_napi_utils.cpp",
      ]

      cflags = [ "-DIMAGE_DEBUG_FLAG" ]

      defines = image_decode_android_defines
      deps = [
        "$commonlibrary_subsystem/base:utils",
        "$image_subsystem/frameworks/innerkitsimpl/pixelconverter:pixelconvertadapter",
        "$image_subsystem/frameworks/innerkitsimpl/utils:image_utils",
        "$image_subsystem/interfaces/innerkits:image_native",
        "$image_subsystem/mock/native:log_mock_static",
        "$image_subsystem/plugins/manager:pluginmanager",
        "$plugins_lib_root/napi:napi_android",
      ]

      external_deps = [
        "c_utils:utils",
        "hitrace:hitrace_meter",
      ]

      if (defined(global_parts_info) &&
          defined(global_parts_info.hiviewdfx_hichecker)) {
        external_deps += [ "hichecker:libhichecker" ]
        defines += [ "HICHECKER_ENABLE" ]
      }

      relative_install_dir = "module/multimedia"
      subsystem_name = "multimedia"
      part_name = "image_framework"
    }
  }
}
