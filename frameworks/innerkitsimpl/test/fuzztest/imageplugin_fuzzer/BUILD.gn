# Copyright (c) 2024 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/multimedia/image_framework/ide/image_decode_config.gni")

ohos_fuzztest("ImagePluginFuzzTest") {
  module_out_path = "multimedia_image/image_framework"
  fuzz_config_file = "$image_subsystem/frameworks/innerkitsimpl/test/fuzztest/imageplugin_fuzzer"
  resource_config_file = "$image_subsystem/test/resource/image/ohos_test.xml"

  cflags = [ "-DIMAGE_COLORSPACE_FLAG" ]

  include_dirs = [
    "./include",
    "$image_subsystem/interfaces/innerkits/include",
    "$image_subsystem/frameworks/innerkitsimpl/test/fuzztest/common/include",
    "$image_subsystem/plugins/common/libs/image/libextplugin/include",
    "$image_subsystem/plugins/common/libs/image/libextplugin/include/jpeg_yuv_decoder",
    "$image_subsystem/plugins/common/libs/image/libsvgplugin/include",
  ]

  defines = [
    "JPEG_HW_DECODE_ENABLE",
    "HEIF_HW_DECODE_ENABLE",
  ]

  sources = [
    "$image_subsystem/frameworks/innerkitsimpl/test/fuzztest/common/src/common_fuzztest_function.cpp",
    "src/image_plugin_fuzz.cpp",
  ]

  deps = [
    "$image_subsystem/interfaces/innerkits:image_native",
    "$image_subsystem/plugins/common/libs/image/libextplugin:extplugin",
    "$image_subsystem/plugins/common/libs/image/libsvgplugin:svgplugin",
  ]

  external_deps = [
    "c_utils:utils",
    "drivers_interface_codec:libimage_proxy_2.1",
    "drivers_interface_display:libdisplay_buffer_hdi_impl",
    "drivers_interface_display:libdisplay_buffer_proxy_1.0",
    "drivers_interface_display:libdisplay_composer_hdi_impl_1.2",
    "drivers_interface_display:libdisplay_composer_proxy_1.0",
    "graphic_2d:color_manager",
    "hilog:libhilog",
    "libexif:libexif",
    "libjpeg-turbo:turbojpeg",
  ]
}
